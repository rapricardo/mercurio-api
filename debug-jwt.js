const jwt = require('jsonwebtoken');

// Token do frontend (cole aqui o token que aparece no log)
const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJrZXF3dmN0b3VkcXJjdHFsemJhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYyMzUzMTQsImV4cCI6MjA3MTgxMTMxNH0.zGBecypLlXlKB9sNdEcFQ7CIpj9A6Nvo2dav_O-JmdQ';

console.log('üîç JWT Debug Script');
console.log('===================');

// Decode sem verifica√ß√£o para ver o conte√∫do
const decoded = jwt.decode(token, { complete: true });
console.log('\nüìã JWT Header:');
console.log(JSON.stringify(decoded.header, null, 2));

console.log('\nüìã JWT Payload:');
console.log(JSON.stringify(decoded.payload, null, 2));

// Configura√ß√µes esperadas
const expectedIssuer = 'https://rkeqwvctoudqrctqlzba.supabase.co';
const jwtSecret = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJrZXF3dmN0b3VkcXJjdHFsemJhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYyMzUzMTQsImV4cCI6MjA3MTgxMTMxNH0.zGBecypLlXlKB9sNdEcFQ7CIpj9A6Nvo2dav_O-JmdQ';

console.log('\nüéØ Compara√ß√£o:');
console.log('Expected Issuer:', expectedIssuer);
console.log('Actual Issuer:  ', decoded.payload.iss);
console.log('Match:          ', decoded.payload.iss === expectedIssuer ? '‚úÖ' : '‚ùå');

// Tentar validar com issuer
try {
  console.log('\nüîê Tentando valida√ß√£o com issuer...');
  const verified = jwt.verify(token, jwtSecret, {
    algorithms: ['HS256'],
    issuer: expectedIssuer
  });
  console.log('‚úÖ Valida√ß√£o com issuer: SUCESSO');
} catch (error) {
  console.log('‚ùå Valida√ß√£o com issuer: FALHOU');
  console.log('Erro:', error.message);
}

// Tentar validar sem issuer
try {
  console.log('\nüîì Tentando valida√ß√£o sem issuer...');
  const verified = jwt.verify(token, jwtSecret, {
    algorithms: ['HS256']
    // sem issuer
  });
  console.log('‚úÖ Valida√ß√£o sem issuer: SUCESSO');
} catch (error) {
  console.log('‚ùå Valida√ß√£o sem issuer: FALHOU');
  console.log('Erro:', error.message);
}