version: '3.8'

# REDES
networks:
  mercurio_internal_network:
    driver: bridge
  proxy_network:
    name: apollo_prod_public_network
    external: true

# SERVIÇOS
services:
  # Redis Cache para Mercurio API
  redis_mercurio:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass "${MERCURIO_REDIS_PASSWORD}"
    volumes:
      - redis_mercurio_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - mercurio_internal_network

  # Mercurio Analytics API
  mercurio-api:
    image: ghcr.io/ricorezultz/mercurio-api:latest
    restart: unless-stopped
    environment:
      # Core Application
      NODE_ENV: "production"
      PORT: "3000"
      GENERIC_TIMEZONE: "America/Sao_Paulo"

      # Database Configuration - Supabase
      DATABASE_URL: "${SUPABASE_DATABASE_URL}"

      # Encryption & Security (OBRIGATÓRIAS)
      ENCRYPTION_KEK_SECRET: "${ENCRYPTION_KEK_SECRET}"
      EMAIL_DEK_SECRET: "${EMAIL_DEK_SECRET}"
      PHONE_DEK_SECRET: "${PHONE_DEK_SECRET}"
      EMAIL_FINGERPRINT_SECRET: "${EMAIL_FINGERPRINT_SECRET}"
      PHONE_FINGERPRINT_SECRET: "${PHONE_FINGERPRINT_SECRET}"

      # Supabase Integration
      SUPABASE_ENABLED: "true"
      SUPABASE_URL: "${SUPABASE_URL}"
      SUPABASE_SERVICE_ROLE_KEY: "${SUPABASE_SERVICE_ROLE_KEY}"
      SUPABASE_ANON_KEY: "${SUPABASE_ANON_KEY}"

      # JWT Configuration
      JWT_SECRET: "${JWT_SECRET}"
      JWT_EXPIRES_IN: "24h"

      # Redis Configuration
      REDIS_ENABLED: "true"
      REDIS_HOST: "redis_mercurio"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "${MERCURIO_REDIS_PASSWORD}"
      REDIS_URL: "redis://:${MERCURIO_REDIS_PASSWORD}@redis_mercurio:6379"

      # Rate Limiting
      RATE_LIMIT_ENABLED: "true"
      RATE_LIMIT_WINDOW_MS: "60000"
      RATE_LIMIT_MAX_REQUESTS: "1000"

      # CORS Settings
      CORS_ENABLED: "true"
      CORS_ORIGIN: "${CORS_ORIGIN}"
      CORS_METHODS: "POST,GET,PUT,DELETE,OPTIONS,PATCH"
      CORS_CREDENTIALS: "true"

      # Logging & Monitoring
      LOG_LEVEL: "INFO,WARN,ERROR"
      LOG_COLOR: "true"
      METRICS_ENABLED: "true"
      PROMETHEUS_METRICS_ENABLED: "true"

      # Feature Flags
      FEATURE_ANALYTICS_ENABLED: "true"
      FEATURE_FUNNELS_ENABLED: "true"
      FEATURE_EXPORTS_ENABLED: "true"
      FEATURE_REALTIME_ENABLED: "true"

      # Tenant & Workspace Settings
      TENANT_DEFAULT_PLAN: "starter"
      TENANT_MAX_PER_USER: "5"
      WORKSPACE_MAX_PER_TENANT: "10"
      DEFAULT_DATA_RETENTION_DAYS: "90"

    ports:
      - "3001:3000"  # Porta local para debug
    depends_on:
      redis_mercurio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mercurio-api.rule=Host(`mercurio-api.ricardotocha.com.br`)"
      - "traefik.http.routers.mercurio-api.entrypoints=websecure"
      - "traefik.http.routers.mercurio-api.tls=true"
      - "traefik.http.routers.mercurio-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.mercurio-api.loadbalancer.server.port=3000"
    networks:
      - mercurio_internal_network
      - proxy_network

# VOLUMES
volumes:
  redis_mercurio_data: